<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classOpenColorIO_1_1Lut1DTransform" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>OpenColorIO::Lut1DTransform</compoundname>
    <basecompoundref refid="classOpenColorIO_1_1Transform" prot="public" virt="non-virtual">OpenColorIO::Transform</basecompoundref>
    <includes refid="OpenColorTransforms_8h" local="no">OpenColorTransforms.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1aea00ac1ebc0b138e5e6822cb2208d333" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Lut1DTransformRcPtr</type>
        <definition>static Lut1DTransformRcPtr OpenColorIO::Lut1DTransform::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
<para>Create an identity 1D-LUT of length two. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="878" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1adafb43ec1b39fe96ca180c95922374ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Lut1DTransformRcPtr</type>
        <definition>static Lut1DTransformRcPtr OpenColorIO::Lut1DTransform::Create</definition>
        <argsstring>(unsigned long length, bool isHalfDomain)</argsstring>
        <name>Create</name>
        <param>
          <type>unsigned long</type>
          <declname>length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isHalfDomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an identity 1D-LUT with specific length and half-domain setting. Will throw for lengths longer than 1024x1024. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="882" column="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1ac4b14c480e3fb61aa16d054e048142d3" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>BitDepth</type>
        <definition>virtual BitDepth OpenColorIO::Lut1DTransform::getFileOutputBitDepth</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getFileOutputBitDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="885" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1adb03ad493d3e17e04049856c1d0c54b2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setFileOutputBitDepth</definition>
        <argsstring>(BitDepth bitDepth) noexcept=0</argsstring>
        <name>setFileOutputBitDepth</name>
        <param>
          <type>BitDepth</type>
          <declname>bitDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bit-depth associated with the LUT values read from a file or set the bit-depth of values to be written to a file (for file formats such as CLF that support multiple bit-depths). However, note that the values stored in the object are always normalized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="891" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1ad2828034b66dba90852973f2b8db8c38" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>const <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>virtual const FormatMetadata&amp; OpenColorIO::Lut1DTransform::getFormatMetadata</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="893" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a6551db510cbe552fba056e1404bc7efa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type><ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>virtual FormatMetadata&amp; OpenColorIO::Lut1DTransform::getFormatMetadata</definition>
        <argsstring>() noexcept=0</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="894" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a0a535089939bcf5aae393030e89912ab" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool OpenColorIO::Lut1DTransform::equals</definition>
        <argsstring>(const Lut1DTransform &amp;other) const noexcept=0</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Lut1DTransform" kindref="compound">Lut1DTransform</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Checks if this exactly equals other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="897" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1ab4730c3b674f5efcb6b6a04883371ef6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>unsigned long</type>
        <definition>virtual unsigned long OpenColorIO::Lut1DTransform::getLength</definition>
        <argsstring>() const =0</argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="899" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a746202a4e79b4ce2ee660d8608ed03fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setLength</definition>
        <argsstring>(unsigned long length)=0</argsstring>
        <name>setLength</name>
        <param>
          <type>unsigned long</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Changing the length will reset the LUT to identity. Will throw for lengths longer than 1024x1024. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="902" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a4869b68ba8055b613066af192a4049fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::getValue</definition>
        <argsstring>(unsigned long index, float &amp;r, float &amp;g, float &amp;b) const =0</argsstring>
        <name>getValue</name>
        <param>
          <type>unsigned long</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="904" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1adb6ad2ace2cb4b6d73b5cc1d299cce38" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setValue</definition>
        <argsstring>(unsigned long index, float r, float g, float b)=0</argsstring>
        <name>setValue</name>
        <param>
          <type>unsigned long</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>g</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the values of a LUT1D. Will throw if the index is outside of the range from 0 to (length-1).</para>
<para>The LUT values are always for the &quot;forward&quot; LUT, regardless of how the transform direction is set.</para>
<para>These values are normalized relative to what may be stored in any given LUT files. For example in a CLF file using a &quot;10i&quot; output depth, a value of 1023 in the file is normalized to 1.0. The values here are unclamped and may extend outside [0,1].</para>
<para>LUTs in various file formats may only provide values for one channel where R, G, B are the same. Even in that case, you should provide three equal values to the setter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="919" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a62bb263fb40f67e1fb816977f775b98b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool OpenColorIO::Lut1DTransform::getInputHalfDomain</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getInputHalfDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="921" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a3236d3cd7bd07a05ca90c46ef2457914" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setInputHalfDomain</definition>
        <argsstring>(bool isHalfDomain) noexcept=0</argsstring>
        <name>setInputHalfDomain</name>
        <param>
          <type>bool</type>
          <declname>isHalfDomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In a half-domain LUT, the contents of the LUT specify the desired value of the function for each half-float value. Therefore, the length of the LUT must be 65536 entries or else <ref refid="classOpenColorIO_1_1Transform_1aff9f7e14349ef4fd9d6f0143e78ffca0" kindref="member">validate()</ref> will throw. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="926" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a00e4a76cf89cb6a6b4dd59dd96e1446a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool OpenColorIO::Lut1DTransform::getOutputRawHalfs</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getOutputRawHalfs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="928" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a1f7243f1a92de7a3c1f14a3deda93a83" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setOutputRawHalfs</definition>
        <argsstring>(bool isRawHalfs) noexcept=0</argsstring>
        <name>setOutputRawHalfs</name>
        <param>
          <type>bool</type>
          <declname>isRawHalfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set OutputRawHalfs to true if you want to output the LUT contents as 16-bit floating point values expressed as unsigned 16-bit integers representing the equivalent bit pattern. For example, the value 1.0 would be written as the integer 15360 because it has the same bit-pattern. Note that this implies the values will be quantized to a 16-bit float. Note that this setting only controls the output formatting (where supported) and not the values for getValue/setValue. The only file formats that currently support this are CLF and CTF. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="938" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1ae89b55bd8416a82bc5d58f1f19ebb8cc" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>Lut1DHueAdjust</type>
        <definition>virtual Lut1DHueAdjust OpenColorIO::Lut1DTransform::getHueAdjust</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getHueAdjust</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="940" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1ae1af904fe3c5cbe6a9f52e57ede73153" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setHueAdjust</definition>
        <argsstring>(Lut1DHueAdjust algo) noexcept=0</argsstring>
        <name>setHueAdjust</name>
        <param>
          <type>Lut1DHueAdjust</type>
          <declname>algo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The 1D-LUT transform optionally supports a hue adjustment feature that was used in some versions of ACES. This adjusts the hue of the result to approximately match the input. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="944" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a0cb254467a9f704e9897dc2dee3afb58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Interpolation</type>
        <definition>virtual Interpolation OpenColorIO::Lut1DTransform::getInterpolation</definition>
        <argsstring>() const =0</argsstring>
        <name>getInterpolation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="946" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1af33d2cceacdc4db8bb30498f9a082fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::Lut1DTransform::setInterpolation</definition>
        <argsstring>(Interpolation algo)=0</argsstring>
        <name>setInterpolation</name>
        <param>
          <type>Interpolation</type>
          <declname>algo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="947" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1aa8ac7541738e332d96b1ccfbadd4981f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Lut1DTransform::Lut1DTransform</definition>
        <argsstring>(const Lut1DTransform &amp;)=delete</argsstring>
        <name>Lut1DTransform</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Lut1DTransform" kindref="compound">Lut1DTransform</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="949" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a31847e27dbd63241e68e4a842fe7c5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenColorIO_1_1Lut1DTransform" kindref="compound">Lut1DTransform</ref> &amp;</type>
        <definition>Lut1DTransform&amp; OpenColorIO::Lut1DTransform::operator=</definition>
        <argsstring>(const Lut1DTransform &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Lut1DTransform" kindref="compound">Lut1DTransform</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="950" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a4668d244a4e814f1135d6868a228b24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual OpenColorIO::Lut1DTransform::~Lut1DTransform</definition>
        <argsstring>()=default</argsstring>
        <name>~Lut1DTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="951" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Lut1DTransform_1a47cd05129b575424306459b737cf44ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Lut1DTransform::Lut1DTransform</definition>
        <argsstring>()=default</argsstring>
        <name>Lut1DTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="954" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a 1D-LUT transform. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>OpenColorIO::Transform</label>
        <link refid="classOpenColorIO_1_1Transform"/>
      </node>
      <node id="1">
        <label>OpenColorIO::Lut1DTransform</label>
        <link refid="classOpenColorIO_1_1Lut1DTransform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>OpenColorIO::Transform</label>
        <link refid="classOpenColorIO_1_1Transform"/>
      </node>
      <node id="1">
        <label>OpenColorIO::Lut1DTransform</label>
        <link refid="classOpenColorIO_1_1Lut1DTransform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="875" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" bodystart="874" bodyend="955"/>
    <listofallmembers>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1aea00ac1ebc0b138e5e6822cb2208d333" prot="public" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>Create</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1adafb43ec1b39fe96ca180c95922374ed" prot="public" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>Create</name></member>
      <member refid="classOpenColorIO_1_1Transform_1aa1cbbd7cf05db7ca517943313dbeeaaa" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>createEditableCopy</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a0a535089939bcf5aae393030e89912ab" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>equals</name></member>
      <member refid="classOpenColorIO_1_1Transform_1a5fd3cefa1d8f6509cc039e0a766758d6" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getDirection</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1ac4b14c480e3fb61aa16d054e048142d3" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getFileOutputBitDepth</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1ad2828034b66dba90852973f2b8db8c38" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a6551db510cbe552fba056e1404bc7efa" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1ae89b55bd8416a82bc5d58f1f19ebb8cc" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getHueAdjust</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a62bb263fb40f67e1fb816977f775b98b" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getInputHalfDomain</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a0cb254467a9f704e9897dc2dee3afb58" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getInterpolation</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1ab4730c3b674f5efcb6b6a04883371ef6" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getLength</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a00e4a76cf89cb6a6b4dd59dd96e1446a" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getOutputRawHalfs</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a4869b68ba8055b613066af192a4049fc" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>getValue</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1aa8ac7541738e332d96b1ccfbadd4981f" prot="public" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>Lut1DTransform</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a47cd05129b575424306459b737cf44ef" prot="protected" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>Lut1DTransform</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a31847e27dbd63241e68e4a842fe7c5d0" prot="public" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ab05c7545c1e3408ca5c38b649ebe2da5" prot="public" virt="non-virtual" ambiguityscope="OpenColorIO::Transform::"><scope>OpenColorIO::Lut1DTransform</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Transform_1accfb0c140b4c341486e002c8b108e10b" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setDirection</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1adb03ad493d3e17e04049856c1d0c54b2" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setFileOutputBitDepth</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1ae1af904fe3c5cbe6a9f52e57ede73153" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setHueAdjust</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a3236d3cd7bd07a05ca90c46ef2457914" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setInputHalfDomain</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1af33d2cceacdc4db8bb30498f9a082fcb" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setInterpolation</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a746202a4e79b4ce2ee660d8608ed03fa" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setLength</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a1f7243f1a92de7a3c1f14a3deda93a83" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setOutputRawHalfs</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1adb6ad2ace2cb4b6d73b5cc1d299cce38" prot="public" virt="pure-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>setValue</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ac261a8e3359a024a16432385107b0c67" prot="public" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>Transform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1a3fe7f157396a4c96f250a434bdc16d2b" prot="protected" virt="non-virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>Transform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1aff9f7e14349ef4fd9d6f0143e78ffca0" prot="public" virt="virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>validate</name></member>
      <member refid="classOpenColorIO_1_1Lut1DTransform_1a4668d244a4e814f1135d6868a228b24d" prot="public" virt="virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>~Lut1DTransform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ac045c8f595624ffade713e4b18be6b4a" prot="public" virt="virtual"><scope>OpenColorIO::Lut1DTransform</scope><name>~Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
