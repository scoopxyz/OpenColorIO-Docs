<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classOpenColorIO_1_1Exception" kind="class" language="C++" prot="public">
    <compoundname>OpenColorIO::Exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">runtime_error</basecompoundref>
    <derivedcompoundref refid="classOpenColorIO_1_1ExceptionMissingFile" prot="public" virt="non-virtual">OpenColorIO::ExceptionMissingFile</derivedcompoundref>
    <includes refid="OpenColorIO_8h" local="no">OpenColorIO.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Exception_1a9da36e27c97561472827368a26128ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Exception::Exception</definition>
        <argsstring>()=delete</argsstring>
        <name>Exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Exception_1a4a126c757986a0d2f6140ac3b402c8ba" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Exception::Exception</definition>
        <argsstring>(const char *)</argsstring>
        <name>Exception</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
<para>Constructor that takes a string as the exception message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Exception_1a025f68d7af0acd864a85fa1adf9642ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Exception::Exception</definition>
        <argsstring>(const Exception &amp;)</argsstring>
        <name>Exception</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Exception" kindref="compound">Exception</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Constructor that takes an existing exception. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Exception_1a422548d7de09243e838220cc836e4f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenColorIO_1_1Exception" kindref="compound">Exception</ref> &amp;</type>
        <definition>Exception&amp; OpenColorIO::Exception::operator=</definition>
        <argsstring>(const Exception &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Exception" kindref="compound">Exception</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="36" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Exception_1a461bcb0fd71f5c47765fdd2b0711db0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Exception::~Exception</definition>
        <argsstring>()</argsstring>
        <name>~Exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="38" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An exception class to throw for errors detected at runtime.</para>
<para><simplesect kind="note"><para>All functions in the <ref refid="classOpenColorIO_1_1Config" kindref="compound">Config</ref> class can potentially throw this exception. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>OpenColorIO::ExceptionMissingFile</label>
        <link refid="classOpenColorIO_1_1ExceptionMissingFile"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::runtime_error</label>
      </node>
      <node id="1">
        <label>OpenColorIO::Exception</label>
        <link refid="classOpenColorIO_1_1Exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>std::runtime_error</label>
      </node>
      <node id="1">
        <label>OpenColorIO::Exception</label>
        <link refid="classOpenColorIO_1_1Exception"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="29" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="28" bodyend="39"/>
    <listofallmembers>
      <member refid="classOpenColorIO_1_1Exception_1a9da36e27c97561472827368a26128ca9" prot="public" virt="non-virtual"><scope>OpenColorIO::Exception</scope><name>Exception</name></member>
      <member refid="classOpenColorIO_1_1Exception_1a4a126c757986a0d2f6140ac3b402c8ba" prot="public" virt="non-virtual"><scope>OpenColorIO::Exception</scope><name>Exception</name></member>
      <member refid="classOpenColorIO_1_1Exception_1a025f68d7af0acd864a85fa1adf9642ac" prot="public" virt="non-virtual"><scope>OpenColorIO::Exception</scope><name>Exception</name></member>
      <member refid="classOpenColorIO_1_1Exception_1a422548d7de09243e838220cc836e4f6f" prot="public" virt="non-virtual"><scope>OpenColorIO::Exception</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Exception_1a461bcb0fd71f5c47765fdd2b0711db0e" prot="public" virt="non-virtual"><scope>OpenColorIO::Exception</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
