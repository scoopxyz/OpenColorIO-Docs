<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classOpenColorIO_1_1MatrixTransform" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>OpenColorIO::MatrixTransform</compoundname>
    <basecompoundref refid="classOpenColorIO_1_1Transform" prot="public" virt="non-virtual">OpenColorIO::Transform</basecompoundref>
    <includes refid="OpenColorTransforms_8h" local="no">OpenColorTransforms.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1ac355a20f4c9b01fc9c26026777ea2339" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MatrixTransformRcPtr</type>
        <definition>static MatrixTransformRcPtr OpenColorIO::MatrixTransform::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1028" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1ad7c821e4c5107f1efda1125a45c5eab0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenColorIO::MatrixTransform::Fit</definition>
        <argsstring>(double *m44, double *offset4, const double *oldmin4, const double *oldmax4, const double *newmin4, const double *newmax4)</argsstring>
        <name>Fit</name>
        <param>
          <type>double *</type>
          <declname>m44</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>offset4</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>oldmin4</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>oldmax4</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>newmin4</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>newmax4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1085" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1ab7cb625f4dadd28bc7144b1b6e22a1e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenColorIO::MatrixTransform::Identity</definition>
        <argsstring>(double *m44, double *offset4)</argsstring>
        <name>Identity</name>
        <param>
          <type>double *</type>
          <declname>m44</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>offset4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1089" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a7e2cc9f07bcfd9734b24c84dfe8a4b88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenColorIO::MatrixTransform::Sat</definition>
        <argsstring>(double *m44, double *offset4, double sat, const double *lumaCoef3)</argsstring>
        <name>Sat</name>
        <param>
          <type>double *</type>
          <declname>m44</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>offset4</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sat</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>lumaCoef3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1091" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a323c37f657ae1047df4b169676617b40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenColorIO::MatrixTransform::Scale</definition>
        <argsstring>(double *m44, double *offset4, const double *scale4)</argsstring>
        <name>Scale</name>
        <param>
          <type>double *</type>
          <declname>m44</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>offset4</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>scale4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1094" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a3477ee6a962ebca5f9073fa05f04b2eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenColorIO::MatrixTransform::View</definition>
        <argsstring>(double *m44, double *offset4, int *channelHot4, const double *lumaCoef3)</argsstring>
        <name>View</name>
        <param>
          <type>double *</type>
          <declname>m44</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>offset4</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>channelHot4</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>lumaCoef3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1097" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1acb94d6918694359b51da10c1c8e6f701" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>const <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>virtual const FormatMetadata&amp; OpenColorIO::MatrixTransform::getFormatMetadata</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1030" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1ab60fa5db411199c92cc417902da7c8b0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type><ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>virtual FormatMetadata&amp; OpenColorIO::MatrixTransform::getFormatMetadata</definition>
        <argsstring>() noexcept=0</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1031" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a7c926d2a8570738600393dadbfc25d83" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool OpenColorIO::MatrixTransform::equals</definition>
        <argsstring>(const MatrixTransform &amp;other) const noexcept=0</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1MatrixTransform" kindref="compound">MatrixTransform</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Checks if this exactly equals other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1034" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a64a2cf7f295c8f004472191afb136847" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::MatrixTransform::getMatrix</definition>
        <argsstring>(double *m44) const =0</argsstring>
        <name>getMatrix</name>
        <param>
          <type>double *</type>
          <declname>m44</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1036" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1aa1f2a0e6d2f77898f22ae63d50443b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::MatrixTransform::setMatrix</definition>
        <argsstring>(const double *m44)=0</argsstring>
        <name>setMatrix</name>
        <param>
          <type>const double *</type>
          <declname>m44</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get or set the values of a Matrix. Expects 16 values, where the first four are the coefficients to generate the R output channel from R, G, B, A input channels.</para>
<para>The Matrix values are always for the &quot;forward&quot; Matrix, regardless of how the transform direction is set.</para>
<para>These values are normalized relative to what may be stored in file formats such as CLF. For example in a CLF file using a &quot;32f&quot; input depth and &quot;10i&quot; output depth, a value of 1023 in the file is normalized to 1.0. The values here are unclamped and may extend outside [0,1]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1049" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a0ff32059ee17bdee3b4fbda58212ffb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::MatrixTransform::getOffset</definition>
        <argsstring>(double *offset4) const =0</argsstring>
        <name>getOffset</name>
        <param>
          <type>double *</type>
          <declname>offset4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1051" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1af5bd8dc5438467d80ffafb4af8b85d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::MatrixTransform::setOffset</definition>
        <argsstring>(const double *offset4)=0</argsstring>
        <name>setOffset</name>
        <param>
          <type>const double *</type>
          <declname>offset4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get or set the R, G, B, A offsets to be applied after the matrix.</para>
<para>These values are normalized relative to what may be stored in file formats such as CLF. For example, in a CLF file using a &quot;10i&quot; output depth, a value of 1023 in the file is normalized to 1.0. The values here are unclamped and may extend outside [0,1]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1060" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1ac386fe8face2bc8e36d8c054a9ad9eaf" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>BitDepth</type>
        <definition>virtual BitDepth OpenColorIO::MatrixTransform::getFileInputBitDepth</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getFileInputBitDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bit-depths associated with the matrix values read from a file or set the bit-depths of values to be written to a file (for file formats such as CLF that support multiple bit-depths).</para>
<para>In a format such as CLF, the matrix values are scaled to take pixels at the specified inBitDepth to pixels at the specified outBitDepth. This complicates the interpretation of the matrix values and so this object always holds normalized values and scaling is done on the way from or to file formats such as CLF. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1072" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a4ce78457422b4e81d8f8f7bef7aa624c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::MatrixTransform::setFileInputBitDepth</definition>
        <argsstring>(BitDepth bitDepth) noexcept=0</argsstring>
        <name>setFileInputBitDepth</name>
        <param>
          <type>BitDepth</type>
          <declname>bitDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1073" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a4cef566c1b0b8d3752b663335fb6d17f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>BitDepth</type>
        <definition>virtual BitDepth OpenColorIO::MatrixTransform::getFileOutputBitDepth</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getFileOutputBitDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1074" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a8d309fd6349a2e7df861abafd77d43c2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::MatrixTransform::setFileOutputBitDepth</definition>
        <argsstring>(BitDepth bitDepth) noexcept=0</argsstring>
        <name>setFileOutputBitDepth</name>
        <param>
          <type>BitDepth</type>
          <declname>bitDepth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1075" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1af60d997b1bfebcfda4e57880bc2c5c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::MatrixTransform::MatrixTransform</definition>
        <argsstring>(const MatrixTransform &amp;)=delete</argsstring>
        <name>MatrixTransform</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1MatrixTransform" kindref="compound">MatrixTransform</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1af5025f54b52208cc292374a557232daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenColorIO_1_1MatrixTransform" kindref="compound">MatrixTransform</ref> &amp;</type>
        <definition>MatrixTransform&amp; OpenColorIO::MatrixTransform::operator=</definition>
        <argsstring>(const MatrixTransform &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1MatrixTransform" kindref="compound">MatrixTransform</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1102" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1a3f5719fe9a0e4f55f5608d05b7adcad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual OpenColorIO::MatrixTransform::~MatrixTransform</definition>
        <argsstring>()=default</argsstring>
        <name>~MatrixTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1103" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenColorIO_1_1MatrixTransform_1abb4a33f38ad56034e749257f0888950e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::MatrixTransform::MatrixTransform</definition>
        <argsstring>()=default</argsstring>
        <name>MatrixTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1106" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents an MX+B Matrix transform.</para>
<para>For singular matrices, an inverse direction will throw an exception during finalization. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>OpenColorIO::Transform</label>
        <link refid="classOpenColorIO_1_1Transform"/>
      </node>
      <node id="1">
        <label>OpenColorIO::MatrixTransform</label>
        <link refid="classOpenColorIO_1_1MatrixTransform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>OpenColorIO::Transform</label>
        <link refid="classOpenColorIO_1_1Transform"/>
      </node>
      <node id="1">
        <label>OpenColorIO::MatrixTransform</label>
        <link refid="classOpenColorIO_1_1MatrixTransform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="1026" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" bodystart="1025" bodyend="1107"/>
    <listofallmembers>
      <member refid="classOpenColorIO_1_1MatrixTransform_1ac355a20f4c9b01fc9c26026777ea2339" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Create</name></member>
      <member refid="classOpenColorIO_1_1Transform_1aa1cbbd7cf05db7ca517943313dbeeaaa" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>createEditableCopy</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a7c926d2a8570738600393dadbfc25d83" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>equals</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1ad7c821e4c5107f1efda1125a45c5eab0" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Fit</name></member>
      <member refid="classOpenColorIO_1_1Transform_1a5fd3cefa1d8f6509cc039e0a766758d6" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getDirection</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1ac386fe8face2bc8e36d8c054a9ad9eaf" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getFileInputBitDepth</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a4cef566c1b0b8d3752b663335fb6d17f" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getFileOutputBitDepth</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1acb94d6918694359b51da10c1c8e6f701" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1ab60fa5db411199c92cc417902da7c8b0" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a64a2cf7f295c8f004472191afb136847" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getMatrix</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a0ff32059ee17bdee3b4fbda58212ffb4" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>getOffset</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1ab7cb625f4dadd28bc7144b1b6e22a1e9" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Identity</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1af60d997b1bfebcfda4e57880bc2c5c70" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>MatrixTransform</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1abb4a33f38ad56034e749257f0888950e" prot="protected" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>MatrixTransform</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1af5025f54b52208cc292374a557232daa" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ab05c7545c1e3408ca5c38b649ebe2da5" prot="public" virt="non-virtual" ambiguityscope="OpenColorIO::Transform::"><scope>OpenColorIO::MatrixTransform</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a7e2cc9f07bcfd9734b24c84dfe8a4b88" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Sat</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a323c37f657ae1047df4b169676617b40" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Scale</name></member>
      <member refid="classOpenColorIO_1_1Transform_1accfb0c140b4c341486e002c8b108e10b" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>setDirection</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a4ce78457422b4e81d8f8f7bef7aa624c" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>setFileInputBitDepth</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a8d309fd6349a2e7df861abafd77d43c2" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>setFileOutputBitDepth</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1aa1f2a0e6d2f77898f22ae63d50443b1e" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>setMatrix</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1af5bd8dc5438467d80ffafb4af8b85d9e" prot="public" virt="pure-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>setOffset</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ac261a8e3359a024a16432385107b0c67" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Transform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1a3fe7f157396a4c96f250a434bdc16d2b" prot="protected" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>Transform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1aff9f7e14349ef4fd9d6f0143e78ffca0" prot="public" virt="virtual"><scope>OpenColorIO::MatrixTransform</scope><name>validate</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a3477ee6a962ebca5f9073fa05f04b2eb" prot="public" virt="non-virtual"><scope>OpenColorIO::MatrixTransform</scope><name>View</name></member>
      <member refid="classOpenColorIO_1_1MatrixTransform_1a3f5719fe9a0e4f55f5608d05b7adcad5" prot="public" virt="virtual"><scope>OpenColorIO::MatrixTransform</scope><name>~MatrixTransform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ac045c8f595624ffade713e4b18be6b4a" prot="public" virt="virtual"><scope>OpenColorIO::MatrixTransform</scope><name>~Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
