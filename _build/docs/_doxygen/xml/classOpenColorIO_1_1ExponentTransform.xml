<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classOpenColorIO_1_1ExponentTransform" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>OpenColorIO::ExponentTransform</compoundname>
    <basecompoundref refid="classOpenColorIO_1_1Transform" prot="public" virt="non-virtual">OpenColorIO::Transform</basecompoundref>
    <includes refid="OpenColorTransforms_8h" local="no">OpenColorTransforms.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1af930c7d928a54ec5e8cb6b60cfdc252c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ExponentTransformRcPtr</type>
        <definition>static ExponentTransformRcPtr OpenColorIO::ExponentTransform::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="407" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a740ac47b4d8bd6e340aafd24417f7304" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>const <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>virtual const FormatMetadata&amp; OpenColorIO::ExponentTransform::getFormatMetadata</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="409" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a1277582742ea3d7e986b01b61b0eb478" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type><ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>virtual FormatMetadata&amp; OpenColorIO::ExponentTransform::getFormatMetadata</definition>
        <argsstring>() noexcept=0</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="410" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1aa370b580a47d9d71b7ffc2ef582ad278" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool OpenColorIO::ExponentTransform::equals</definition>
        <argsstring>(const ExponentTransform &amp;other) const noexcept=0</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1ExponentTransform" kindref="compound">ExponentTransform</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Checks if this exactly equals other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="413" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a505d98e41e39984797c7c566564be0c9" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::ExponentTransform::getValue</definition>
        <argsstring>(double(&amp;vec4)[4]) const noexcept=0</argsstring>
        <name>getValue</name>
        <param>
          <type>double(&amp;)</type>
          <declname>vec4</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="415" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1af4617dcea1a2f169a39048fea87d6bec" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::ExponentTransform::setValue</definition>
        <argsstring>(const double(&amp;vec4)[4]) noexcept=0</argsstring>
        <name>setValue</name>
        <param>
          <type>const double(&amp;)</type>
          <declname>vec4</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="416" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a0bb811b4ae2bc90eb9a931ec757dbe5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>NegativeStyle</type>
        <definition>virtual NegativeStyle OpenColorIO::ExponentTransform::getNegativeStyle</definition>
        <argsstring>() const =0</argsstring>
        <name>getNegativeStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies how negative values are handled. Legal values:</para>
<para><itemizedlist>
<listitem><para>NEGATIVE_CLAMP <ndash/> Clamp negative values (default).</para>
</listitem><listitem><para>NEGATIVE_MIRROR <ndash/> Positive curve is rotated 180 degrees around the origin to handle negatives.</para>
</listitem><listitem><para>NEGATIVE_PASS_THRU <ndash/> Negative values are passed through unchanged. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="424" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a572c1e53aab43f748f01a05388faf0c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::ExponentTransform::setNegativeStyle</definition>
        <argsstring>(NegativeStyle style)=0</argsstring>
        <name>setNegativeStyle</name>
        <param>
          <type>NegativeStyle</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="425" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a01d45049687c367ff684500e01b4b625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::ExponentTransform::ExponentTransform</definition>
        <argsstring>(const ExponentTransform &amp;)=delete</argsstring>
        <name>ExponentTransform</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1ExponentTransform" kindref="compound">ExponentTransform</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="427" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1accfef4b7b4c806d29de84cb221c9083e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenColorIO_1_1ExponentTransform" kindref="compound">ExponentTransform</ref> &amp;</type>
        <definition>ExponentTransform&amp; OpenColorIO::ExponentTransform::operator=</definition>
        <argsstring>(const ExponentTransform &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1ExponentTransform" kindref="compound">ExponentTransform</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="428" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1ad576b3eff1a9323534ebb9da47e8ae4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual OpenColorIO::ExponentTransform::~ExponentTransform</definition>
        <argsstring>()=default</argsstring>
        <name>~ExponentTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="429" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenColorIO_1_1ExponentTransform_1a71d39420c35e7f52b44fea36baf64fa6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::ExponentTransform::ExponentTransform</definition>
        <argsstring>()=default</argsstring>
        <name>ExponentTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="432" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents exponent transform: pow( clamp(color), value ).</para>
<para>​<simplesect kind="note"><para>For configs with version == 1: Negative style is ignored and if the exponent is 1.0, this will not clamp. Otherwise, the input color will be clamped between [0.0, inf]. For configs with version &gt; 1: Negative value handling may be specified via setNegativeStyle. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>OpenColorIO::Transform</label>
        <link refid="classOpenColorIO_1_1Transform"/>
      </node>
      <node id="1">
        <label>OpenColorIO::ExponentTransform</label>
        <link refid="classOpenColorIO_1_1ExponentTransform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>OpenColorIO::Transform</label>
        <link refid="classOpenColorIO_1_1Transform"/>
      </node>
      <node id="1">
        <label>OpenColorIO::ExponentTransform</label>
        <link refid="classOpenColorIO_1_1ExponentTransform"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" line="405" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorTransforms.h" bodystart="404" bodyend="433"/>
    <listofallmembers>
      <member refid="classOpenColorIO_1_1ExponentTransform_1af930c7d928a54ec5e8cb6b60cfdc252c" prot="public" virt="non-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>Create</name></member>
      <member refid="classOpenColorIO_1_1Transform_1aa1cbbd7cf05db7ca517943313dbeeaaa" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>createEditableCopy</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1aa370b580a47d9d71b7ffc2ef582ad278" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>equals</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a01d45049687c367ff684500e01b4b625" prot="public" virt="non-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>ExponentTransform</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a71d39420c35e7f52b44fea36baf64fa6" prot="protected" virt="non-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>ExponentTransform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1a5fd3cefa1d8f6509cc039e0a766758d6" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>getDirection</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a740ac47b4d8bd6e340aafd24417f7304" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a1277582742ea3d7e986b01b61b0eb478" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a0bb811b4ae2bc90eb9a931ec757dbe5b" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>getNegativeStyle</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a505d98e41e39984797c7c566564be0c9" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>getValue</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1accfef4b7b4c806d29de84cb221c9083e" prot="public" virt="non-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ab05c7545c1e3408ca5c38b649ebe2da5" prot="public" virt="non-virtual" ambiguityscope="OpenColorIO::Transform::"><scope>OpenColorIO::ExponentTransform</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Transform_1accfb0c140b4c341486e002c8b108e10b" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>setDirection</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1a572c1e53aab43f748f01a05388faf0c5" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>setNegativeStyle</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1af4617dcea1a2f169a39048fea87d6bec" prot="public" virt="pure-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>setValue</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ac261a8e3359a024a16432385107b0c67" prot="public" virt="non-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>Transform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1a3fe7f157396a4c96f250a434bdc16d2b" prot="protected" virt="non-virtual"><scope>OpenColorIO::ExponentTransform</scope><name>Transform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1aff9f7e14349ef4fd9d6f0143e78ffca0" prot="public" virt="virtual"><scope>OpenColorIO::ExponentTransform</scope><name>validate</name></member>
      <member refid="classOpenColorIO_1_1ExponentTransform_1ad576b3eff1a9323534ebb9da47e8ae4f" prot="public" virt="virtual"><scope>OpenColorIO::ExponentTransform</scope><name>~ExponentTransform</name></member>
      <member refid="classOpenColorIO_1_1Transform_1ac045c8f595624ffade713e4b18be6b4a" prot="public" virt="virtual"><scope>OpenColorIO::ExponentTransform</scope><name>~Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
