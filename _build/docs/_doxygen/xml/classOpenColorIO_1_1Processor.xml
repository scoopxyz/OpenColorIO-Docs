<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classOpenColorIO_1_1Processor" kind="class" language="C++" prot="public">
    <compoundname>OpenColorIO::Processor</compoundname>
    <includes refid="OpenColorIO_8h" local="no">OpenColorIO.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classOpenColorIO_1_1Processor_1ac3da7e21a05bf8852638db7e4dd1b81a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Config</definition>
        <argsstring></argsstring>
        <name>Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1273" column="5" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1273" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenColorIO_1_1Processor_1a3c6e1d991e55e1cea3eabf9f59f167ae" prot="private" static="no" mutable="no">
        <type>Impl *</type>
        <definition>Impl* OpenColorIO::Processor::m_impl</definition>
        <argsstring></argsstring>
        <name>m_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1276" column="11" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a379fee0caeb250886832b03f4dea30fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OpenColorIO::Processor::isNoOp</definition>
        <argsstring>() const</argsstring>
        <name>isNoOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a0457a7948bdcaa068ebfb40801cfde1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OpenColorIO::Processor::hasChannelCrosstalk</definition>
        <argsstring>() const</argsstring>
        <name>hasChannelCrosstalk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>True if the image transformation is non-separable. For example, if a change in red may also cause a change in green or blue. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1165" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a4d0bd775f7ec6d9de025960bb9664380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* OpenColorIO::Processor::getCacheID</definition>
        <argsstring>() const</argsstring>
        <name>getCacheID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1167" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a73d924bc646e60caa5b7c282551bf408" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstProcessorMetadataRcPtr</type>
        <definition>ConstProcessorMetadataRcPtr OpenColorIO::Processor::getProcessorMetadata</definition>
        <argsstring>() const</argsstring>
        <name>getProcessorMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classOpenColorIO_1_1ProcessorMetadata" kindref="compound">ProcessorMetadata</ref> contains technical information such as the number of files and looks used in the processor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1171" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a740794b13eedd0f3c581bbb901749a48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>const FormatMetadata&amp; OpenColorIO::Processor::getFormatMetadata</definition>
        <argsstring>() const</argsstring>
        <name>getFormatMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> containing the top level metadata for the processor. For a processor from a CLF file, this corresponds to the ProcessList metadata. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1176" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a777c23bad2dc960dd8836eb2597eba4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OpenColorIO::Processor::getNumTransforms</definition>
        <argsstring>() const</argsstring>
        <name>getNumTransforms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of transforms that comprise the processor. Each transform has a (potentially empty) <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1180" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a593accfa478c9ce468c87945dfd88605" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> &amp;</type>
        <definition>const FormatMetadata&amp; OpenColorIO::Processor::getTransformFormatMetadata</definition>
        <argsstring>(int index) const</argsstring>
        <name>getTransformFormatMetadata</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a <ref refid="classOpenColorIO_1_1FormatMetadata" kindref="compound">FormatMetadata</ref> containing the metadata for a transform within the processor. For a processor from a CLF file, this corresponds to the metadata associated with an individual process node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1185" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1aa389ce88d86f67fb1bb07ea85b3b3779" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GroupTransformRcPtr</type>
        <definition>GroupTransformRcPtr OpenColorIO::Processor::createGroupTransform</definition>
        <argsstring>() const</argsstring>
        <name>createGroupTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="classOpenColorIO_1_1GroupTransform" kindref="compound">GroupTransform</ref> that contains a copy of the transforms that comprise the processor. (Changes to it will not modify the original processor.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1190" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a7d39e9be85c2f5ec4bbfc2eb1fd64589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenColorIO::Processor::write</definition>
        <argsstring>(const char *formatName, std::ostream &amp;os) const</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>formatName</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the transforms comprising the processor to the stream. Writing (as opposed to Baking) is a lossless process. An exception is thrown if the processor cannot be losslessly written to the specified file format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a4a4f6dd1df236c2597922c6d3e130f31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>DynamicPropertyRcPtr</type>
        <definition>DynamicPropertyRcPtr OpenColorIO::Processor::getDynamicProperty</definition>
        <argsstring>(DynamicPropertyType type) const</argsstring>
        <name>getDynamicProperty</name>
        <param>
          <type>DynamicPropertyType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1207" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a2aeb084cb5e3ace7864cddfc3856e14d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OpenColorIO::Processor::hasDynamicProperty</definition>
        <argsstring>(DynamicPropertyType type) const</argsstring>
        <name>hasDynamicProperty</name>
        <param>
          <type>DynamicPropertyType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a0171fa2e73651723c041b8e104a76139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstProcessorRcPtr</type>
        <definition>ConstProcessorRcPtr OpenColorIO::Processor::getOptimizedProcessor</definition>
        <argsstring>(OptimizationFlags oFlags) const</argsstring>
        <name>getOptimizedProcessor</name>
        <param>
          <type>OptimizationFlags</type>
          <declname>oFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run the optimizer on a <ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> to create a new <ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref>. It is usually not necessary to call this since getting a <ref refid="classOpenColorIO_1_1CPUProcessor" kindref="compound">CPUProcessor</ref> or <ref refid="classOpenColorIO_1_1GPUProcessor" kindref="compound">GPUProcessor</ref> will also optimize. However if you need both, calling this method first makes getting a CPU and GPU <ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> faster since the optimization is effectively only done once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1214" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1ad81985b40a5631c3c06c96cae17be254" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstProcessorRcPtr</type>
        <definition>ConstProcessorRcPtr OpenColorIO::Processor::getOptimizedProcessor</definition>
        <argsstring>(BitDepth inBD, BitDepth outBD, OptimizationFlags oFlags) const</argsstring>
        <name>getOptimizedProcessor</name>
        <param>
          <type>BitDepth</type>
          <declname>inBD</declname>
        </param>
        <param>
          <type>BitDepth</type>
          <declname>outBD</declname>
        </param>
        <param>
          <type>OptimizationFlags</type>
          <declname>oFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> that is optimized for a specific in and out bit-depth (as <ref refid="classOpenColorIO_1_1CPUProcessor" kindref="compound">CPUProcessor</ref> would do). This method is provided primarily for diagnostic purposes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1219" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a69e32dfe204859a61c1fd72ccc5fca6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstGPUProcessorRcPtr</type>
        <definition>ConstGPUProcessorRcPtr OpenColorIO::Processor::getDefaultGPUProcessor</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultGPUProcessor</name>
        <briefdescription>
<para>Get an optimized <ref refid="classOpenColorIO_1_1GPUProcessor" kindref="compound">GPUProcessor</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1224" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1acd6c78f73b3d625aa92426597f77ff5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstGPUProcessorRcPtr</type>
        <definition>ConstGPUProcessorRcPtr OpenColorIO::Processor::getOptimizedGPUProcessor</definition>
        <argsstring>(OptimizationFlags oFlags) const</argsstring>
        <name>getOptimizedGPUProcessor</name>
        <param>
          <type>OptimizationFlags</type>
          <declname>oFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1226" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a5be9e21126018d043a4aa53834e8bd7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstCPUProcessorRcPtr</type>
        <definition>ConstCPUProcessorRcPtr OpenColorIO::Processor::getDefaultCPUProcessor</definition>
        <argsstring>() const</argsstring>
        <name>getDefaultCPUProcessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an optimized <computeroutput><ref refid="classOpenColorIO_1_1CPUProcessor" kindref="compound">CPUProcessor</ref></computeroutput> instance.</para>
<para><simplesect kind="note"><para>This may provide higher fidelity than anticipated due to internal optimizations. For example, if the inputColorSpace and the outputColorSpace are members of the same family, no conversion will be applied, even though strictly speaking quantization should be added. </para>
</simplesect>
<simplesect kind="note"><para>The typical use case to apply color processing to an image is:</para>
</simplesect>
<programlisting><codeline><highlight class="normal">OCIO::ConstConfigRcPtr<sp/>config<sp/>=<sp/>OCIO::GetCurrentConfig();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">OCIO::ConstProcessorRcPtr<sp/>processor</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>=<sp/>config-&gt;getProcessor(colorSpace1,<sp/>colorSpace2);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">OCIO::ConstCPUProcessorRcPtr<sp/>cpuProcessor</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>=<sp/>processor-&gt;getDefaultCPUProcessor();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">OCIO::PackedImageDesc<sp/>img(imgDataPtr,<sp/>imgWidth,<sp/>imgHeight,<sp/>imgChannels);</highlight></codeline>
<codeline><highlight class="normal">cpuProcessor-&gt;apply(img);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1255" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1ab080c14e90858f17c03d9f435f35cd9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstCPUProcessorRcPtr</type>
        <definition>ConstCPUProcessorRcPtr OpenColorIO::Processor::getOptimizedCPUProcessor</definition>
        <argsstring>(OptimizationFlags oFlags) const</argsstring>
        <name>getOptimizedCPUProcessor</name>
        <param>
          <type>OptimizationFlags</type>
          <declname>oFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1256" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1afe97a4c49a098cd95085417d94d8c3f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ConstCPUProcessorRcPtr</type>
        <definition>ConstCPUProcessorRcPtr OpenColorIO::Processor::getOptimizedCPUProcessor</definition>
        <argsstring>(BitDepth inBitDepth, BitDepth outBitDepth, OptimizationFlags oFlags) const</argsstring>
        <name>getOptimizedCPUProcessor</name>
        <param>
          <type>BitDepth</type>
          <declname>inBitDepth</declname>
        </param>
        <param>
          <type>BitDepth</type>
          <declname>outBitDepth</declname>
        </param>
        <param>
          <type>OptimizationFlags</type>
          <declname>oFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1257" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1aff566a0597d82b198f9e4091ad7fbe70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Processor::~Processor</definition>
        <argsstring>()</argsstring>
        <name>~Processor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1261" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a96089393043b24d97c99e0fada1edf71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int OpenColorIO::Processor::getNumWriteFormats</definition>
        <argsstring>()</argsstring>
        <name>getNumWriteFormats</name>
        <briefdescription>
<para>Get the number of writers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1198" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a23676735bdded72144ae256e15665bf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* OpenColorIO::Processor::getFormatNameByIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>getFormatNameByIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the writer at index, return empty string if an invalid index is specified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1202" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a5257645a07c8c38d74fff1915be3bae8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* OpenColorIO::Processor::getFormatExtensionByIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>getFormatExtensionByIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1203" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1aacd4051448d25e3034b311a15b9bd253" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Processor::Processor</definition>
        <argsstring>()</argsstring>
        <name>Processor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1264" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a9ca6032a72b5b073633bb917d3ed6d02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::Processor::Processor</definition>
        <argsstring>(const Processor &amp;)</argsstring>
        <name>Processor</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1266" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a30093ec2fb1dc23261135a42fb6ea084" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> &amp;</type>
        <definition>Processor&amp; OpenColorIO::Processor::operator=</definition>
        <argsstring>(const Processor &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1267" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a2e583153873813676b16125a48c91689" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Impl *</type>
        <definition>Impl* OpenColorIO::Processor::getImpl</definition>
        <argsstring>()</argsstring>
        <name>getImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1277" column="11" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1277" bodyend="1277"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a0f60d7d6bb06776b6d46211df1b91938" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Impl *</type>
        <definition>const Impl* OpenColorIO::Processor::getImpl</definition>
        <argsstring>() const</argsstring>
        <name>getImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1278" column="17" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1278" bodyend="1278"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1ae976bd985c34cc81818a7d175843c22f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ProcessorRcPtr</type>
        <definition>static ProcessorRcPtr OpenColorIO::Processor::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1269" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1Processor_1a653943238ce3dcd77ad80debf95ae7f5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void OpenColorIO::Processor::deleter</definition>
        <argsstring>(Processor *c)</argsstring>
        <name>deleter</name>
        <param>
          <type><ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1271" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <emphasis><ref refid="classOpenColorIO_1_1Processor" kindref="compound">Processor</ref></emphasis> represents a specific color transformation which is the result of <ref refid="classOpenColorIO_1_1Config_1a9d95b8748be3724109b8dcb439bda28b" kindref="member">Config::getProcessor</ref>`. </para>
    </detaileddescription>
    <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1159" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1158" bodyend="1279"/>
    <listofallmembers>
      <member refid="classOpenColorIO_1_1Processor_1ac3da7e21a05bf8852638db7e4dd1b81a" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>Config</name></member>
      <member refid="classOpenColorIO_1_1Processor_1ae976bd985c34cc81818a7d175843c22f" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>Create</name></member>
      <member refid="classOpenColorIO_1_1Processor_1aa389ce88d86f67fb1bb07ea85b3b3779" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>createGroupTransform</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a653943238ce3dcd77ad80debf95ae7f5" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>deleter</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a4d0bd775f7ec6d9de025960bb9664380" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getCacheID</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a5be9e21126018d043a4aa53834e8bd7b" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getDefaultCPUProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a69e32dfe204859a61c1fd72ccc5fca6f" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getDefaultGPUProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a4a4f6dd1df236c2597922c6d3e130f31" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getDynamicProperty</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a5257645a07c8c38d74fff1915be3bae8" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getFormatExtensionByIndex</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a740794b13eedd0f3c581bbb901749a48" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a23676735bdded72144ae256e15665bf7" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getFormatNameByIndex</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a2e583153873813676b16125a48c91689" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getImpl</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a0f60d7d6bb06776b6d46211df1b91938" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getImpl</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a777c23bad2dc960dd8836eb2597eba4f" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getNumTransforms</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a96089393043b24d97c99e0fada1edf71" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getNumWriteFormats</name></member>
      <member refid="classOpenColorIO_1_1Processor_1ab080c14e90858f17c03d9f435f35cd9a" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getOptimizedCPUProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1afe97a4c49a098cd95085417d94d8c3f3" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getOptimizedCPUProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1acd6c78f73b3d625aa92426597f77ff5f" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getOptimizedGPUProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a0171fa2e73651723c041b8e104a76139" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getOptimizedProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1ad81985b40a5631c3c06c96cae17be254" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getOptimizedProcessor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a73d924bc646e60caa5b7c282551bf408" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getProcessorMetadata</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a593accfa478c9ce468c87945dfd88605" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>getTransformFormatMetadata</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a0457a7948bdcaa068ebfb40801cfde1e" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>hasChannelCrosstalk</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a2aeb084cb5e3ace7864cddfc3856e14d" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>hasDynamicProperty</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a379fee0caeb250886832b03f4dea30fd" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>isNoOp</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a3c6e1d991e55e1cea3eabf9f59f167ae" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>m_impl</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a30093ec2fb1dc23261135a42fb6ea084" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1Processor_1aacd4051448d25e3034b311a15b9bd253" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>Processor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a9ca6032a72b5b073633bb917d3ed6d02" prot="private" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>Processor</name></member>
      <member refid="classOpenColorIO_1_1Processor_1a7d39e9be85c2f5ec4bbfc2eb1fd64589" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>write</name></member>
      <member refid="classOpenColorIO_1_1Processor_1aff566a0597d82b198f9e4091ad7fbe70" prot="public" virt="non-virtual"><scope>OpenColorIO::Processor</scope><name>~Processor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
