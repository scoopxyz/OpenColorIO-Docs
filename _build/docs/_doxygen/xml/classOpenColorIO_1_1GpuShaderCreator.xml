<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classOpenColorIO_1_1GpuShaderCreator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>OpenColorIO::GpuShaderCreator</compoundname>
    <derivedcompoundref refid="classOpenColorIO_1_1GpuShaderDesc" prot="public" virt="non-virtual">OpenColorIO::GpuShaderDesc</derivedcompoundref>
    <includes refid="OpenColorIO_8h" local="no">OpenColorIO.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classOpenColorIO_1_1GpuShaderCreator_1ac0ccf40f657d3df178cc8ae244134219" prot="public" static="no" strong="no">
        <type></type>
        <name>TextureType</name>
        <enumvalue id="classOpenColorIO_1_1GpuShaderCreator_1ac0ccf40f657d3df178cc8ae244134219a1ebf3e139458c15f7a638260059e02af" prot="public">
          <name>TEXTURE_RED_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classOpenColorIO_1_1GpuShaderCreator_1ac0ccf40f657d3df178cc8ae244134219ac0e9920b3ef324bc8fcc9a0ab5ef5d76" prot="public">
          <name>TEXTURE_RGB_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1789" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1788" bodyend="1792"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classOpenColorIO_1_1GpuShaderCreator_1a0e52a68447afb66a945caa74f4377e80" prot="protected" static="no" mutable="no">
        <type>Impl *</type>
        <definition>Impl* OpenColorIO::GpuShaderCreator::m_impl</definition>
        <argsstring></argsstring>
        <name>m_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1880" column="11" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1879" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aefcabad237571ec803f026d4b78129b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>GpuShaderCreatorRcPtr</type>
        <definition>virtual GpuShaderCreatorRcPtr OpenColorIO::GpuShaderCreator::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classOpenColorIO_1_1GpuShaderDesc_1a79e3ff2312d224ce4f3ffbafa2f55995">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1745" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a2e7cff7f3b9a22f8d1687a4ccce94d1f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* OpenColorIO::GpuShaderCreator::getUniqueID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getUniqueID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1747" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1ac35f65f6ab2e51a0389c185b03410a74" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenColorIO::GpuShaderCreator::setUniqueID</definition>
        <argsstring>(const char *uid) noexcept</argsstring>
        <name>setUniqueID</name>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1748" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1ae83c259369557abb695647df308dd3ed" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>GpuLanguage</type>
        <definition>GpuLanguage OpenColorIO::GpuShaderCreator::getLanguage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1750" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a75637e61337430e8d6c088e434beaa17" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenColorIO::GpuShaderCreator::setLanguage</definition>
        <argsstring>(GpuLanguage lang) noexcept</argsstring>
        <name>setLanguage</name>
        <param>
          <type>GpuLanguage</type>
          <declname>lang</declname>
        </param>
        <briefdescription>
<para>Set the shader program language. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1752" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1ab4ac5053444b2f708479593802dd1d62" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* OpenColorIO::GpuShaderCreator::getFunctionName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFunctionName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1754" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aeab38f9711debc759de0ae1cea252782" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenColorIO::GpuShaderCreator::setFunctionName</definition>
        <argsstring>(const char *name) noexcept</argsstring>
        <name>setFunctionName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the function name of the shader program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1756" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a736046bc5633be4f33e1a13339741c30" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* OpenColorIO::GpuShaderCreator::getPixelName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPixelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1758" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a328bd2bd77ad241380435547277b149c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenColorIO::GpuShaderCreator::setPixelName</definition>
        <argsstring>(const char *name) noexcept</argsstring>
        <name>setPixelName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Set the pixel name variable holding the color values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1760" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aae14f5161e456dbbfd79e93252b3a2ba" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* OpenColorIO::GpuShaderCreator::getResourcePrefix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getResourcePrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Some applications require that textures, uniforms, and helper methods be uniquely named because several processor instances could coexist. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1766" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a19150567cfccf6ba6fe3c5c696a525ff" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenColorIO::GpuShaderCreator::setResourcePrefix</definition>
        <argsstring>(const char *prefix) noexcept</argsstring>
        <name>setResourcePrefix</name>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Set a prefix to the resource name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1768" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1ab9a5b1ca90bafcee8edf5ddddc511165" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* OpenColorIO::GpuShaderCreator::getCacheID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getCacheID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1770" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a94f4ee14c054178964279da43b3e455b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::begin</definition>
        <argsstring>(const char *uid)</argsstring>
        <name>begin</name>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
<para>Start to collect the shader data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1773" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aefff8d2d8bcde50bff056dfac8e9c686" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>End to collect the shader data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1775" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a8a8238cba4094badb4814c8431999b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::setTextureMaxWidth</definition>
        <argsstring>(unsigned maxWidth)=0</argsstring>
        <name>setTextureMaxWidth</name>
        <param>
          <type>unsigned</type>
          <declname>maxWidth</declname>
        </param>
        <briefdescription>
<para>Some graphic cards could have 1D &amp; 2D textures with size limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1778" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1ab1a1ec84dcb7f9e5157d9a37effa98b4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>unsigned</type>
        <definition>virtual unsigned OpenColorIO::GpuShaderCreator::getTextureMaxWidth</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>getTextureMaxWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1779" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a293ab0e64326700341954185cb6f6a0f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned OpenColorIO::GpuShaderCreator::getNextResourceIndex</definition>
        <argsstring>() noexcept</argsstring>
        <name>getNextResourceIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>To avoid texture/unform name clashes always append an increasing number to the resource name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1783" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aff5b6b69bfa024f466f011ba0d995f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool OpenColorIO::GpuShaderCreator::addUniform</definition>
        <argsstring>(const char *name, const DynamicPropertyRcPtr &amp;value)=0</argsstring>
        <name>addUniform</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const DynamicPropertyRcPtr &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1785" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a286037957d6c9442740d7a5a30745205" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::addTexture</definition>
        <argsstring>(const char *textureName, const char *samplerName, const char *uid, unsigned width, unsigned height, TextureType channel, Interpolation interpolation, const float *values)=0</argsstring>
        <name>addTexture</name>
        <param>
          <type>const char *</type>
          <declname>textureName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>samplerName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>width</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>height</declname>
        </param>
        <param>
          <type>TextureType</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>Interpolation</type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1794" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aa2563eedfe100386218081626923c594" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::add3DTexture</definition>
        <argsstring>(const char *textureName, const char *samplerName, const char *uid, unsigned edgelen, Interpolation interpolation, const float *values)=0</argsstring>
        <name>add3DTexture</name>
        <param>
          <type>const char *</type>
          <declname>textureName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>samplerName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>edgelen</declname>
        </param>
        <param>
          <type>Interpolation</type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1802" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a650f4c1a6b6e1877f8eea88d1c8172b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::addToDeclareShaderCode</definition>
        <argsstring>(const char *shaderCode)</argsstring>
        <name>addToDeclareShaderCode</name>
        <param>
          <type>const char *</type>
          <declname>shaderCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to specialize parts of a OCIO shader program.</para>
<para><bold>An OCIO shader program could contain:</bold></para>
<para><orderedlist>
<listitem><para>A declaration part e.g., uniform sampled3D tex3;</para>
</listitem><listitem><para>Some helper methods</para>
</listitem><listitem><para>The OCIO shader function may be broken down as:<orderedlist>
<listitem><para>The function header e.g., void OCIODisplay(in vec4 inColor) {</para>
</listitem><listitem><para>The function body e.g., vec4 outColor.rgb = texture3D(tex3, inColor.rgb).rgb;</para>
</listitem><listitem><para>The function footer e.g., return outColor; }</para>
</listitem></orderedlist>
</para>
</listitem></orderedlist>
</para>
<para><bold>Usage Example:</bold></para>
<para>Below is a code snippet to highlight the different parts of the OCIO shader program.</para>
<para>.. code-block:: cpp</para>
<para>// All global declarations uniform sampled3D tex3;</para>
<para>// All helper methods vec3 computePosition(vec3 color) { vec3 coords = color; // Some processing... return coords; }</para>
<para>// The shader function vec4 OCIODisplay(in vec4 inColor) // { // Function Header vec4 outColor = inColor; //</para>
<para>outColor.rgb = texture3D(tex3, computePosition(inColor.rgb)).rgb;</para>
<para>return outColor; // Function Footer } // </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1852" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a1319475d3b456ed4a95e4771e6ea3b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::addToHelperShaderCode</definition>
        <argsstring>(const char *shaderCode)</argsstring>
        <name>addToHelperShaderCode</name>
        <param>
          <type>const char *</type>
          <declname>shaderCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1853" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aa51f90054aadcd1bc109352d13c885fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::addToFunctionHeaderShaderCode</definition>
        <argsstring>(const char *shaderCode)</argsstring>
        <name>addToFunctionHeaderShaderCode</name>
        <param>
          <type>const char *</type>
          <declname>shaderCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1854" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aaef2f573b56f27eab566d27c5b12f9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::addToFunctionShaderCode</definition>
        <argsstring>(const char *shaderCode)</argsstring>
        <name>addToFunctionShaderCode</name>
        <param>
          <type>const char *</type>
          <declname>shaderCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1855" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1adc63f83e4d7d0683ae7a326637ddf38b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::addToFunctionFooterShaderCode</definition>
        <argsstring>(const char *shaderCode)</argsstring>
        <name>addToFunctionFooterShaderCode</name>
        <param>
          <type>const char *</type>
          <declname>shaderCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1856" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aca63ccc1ca4a57926de2b8c035ab0250" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::createShaderText</definition>
        <argsstring>(const char *shaderDeclarations, const char *shaderHelperMethods, const char *shaderFunctionHeader, const char *shaderFunctionBody, const char *shaderFunctionFooter)</argsstring>
        <name>createShaderText</name>
        <param>
          <type>const char *</type>
          <declname>shaderDeclarations</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shaderHelperMethods</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shaderFunctionHeader</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shaderFunctionBody</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shaderFunctionFooter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the OCIO shader program</para>
<para><simplesect kind="note"><para>The OCIO shader program is decomposed to allow a specific implementation to change some parts. Some product integrations add the color processing within a client shader program, imposing constraints requiring this flexibility. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1864" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a5081dc6057d6ad7db8d9249943427a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void OpenColorIO::GpuShaderCreator::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1870" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a9efeac81b9a31ddceec71a5f834f83aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual OpenColorIO::GpuShaderCreator::~GpuShaderCreator</definition>
        <argsstring>()</argsstring>
        <name>~GpuShaderCreator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1872" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a45aadfc88f2d565f91c36132eb934d4a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::GpuShaderCreator::GpuShaderCreator</definition>
        <argsstring>()</argsstring>
        <name>GpuShaderCreator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1875" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1aeb3d603c24285a2a6847d7e0fa2ccd94" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenColorIO::GpuShaderCreator::GpuShaderCreator</definition>
        <argsstring>(const GpuShaderCreator &amp;)=delete</argsstring>
        <name>GpuShaderCreator</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1GpuShaderCreator" kindref="compound">GpuShaderCreator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1876" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a0f0030b407e66a6b8fc57ecc9477a95a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOpenColorIO_1_1GpuShaderCreator" kindref="compound">GpuShaderCreator</ref> &amp;</type>
        <definition>GpuShaderCreator&amp; OpenColorIO::GpuShaderCreator::operator=</definition>
        <argsstring>(const GpuShaderCreator &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classOpenColorIO_1_1GpuShaderCreator" kindref="compound">GpuShaderCreator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1877" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1a215d4db9f8bf2e5cc7a092c3f1a60063" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Impl *</type>
        <definition>Impl* OpenColorIO::GpuShaderCreator::getImpl</definition>
        <argsstring>()</argsstring>
        <name>getImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1881" column="11" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1881" bodyend="1881"/>
      </memberdef>
      <memberdef kind="function" id="classOpenColorIO_1_1GpuShaderCreator_1ae1cba21ec94e02bdba84f7f2e496fbd7" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Impl *</type>
        <definition>const Impl* OpenColorIO::GpuShaderCreator::getImpl</definition>
        <argsstring>() const</argsstring>
        <name>getImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1882" column="17" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1882" bodyend="1882"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Inherit from the class to fully customize the implementation of a GPU shader program from a color transformation.</para>
<para>When no customizations are needed then the <computeroutput><ref refid="classOpenColorIO_1_1GpuShaderDesc" kindref="compound">GpuShaderDesc</ref></computeroutput> is a better choice. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OpenColorIO::GpuShaderCreator</label>
        <link refid="classOpenColorIO_1_1GpuShaderCreator"/>
      </node>
      <node id="2">
        <label>OpenColorIO::GpuShaderDesc</label>
        <link refid="classOpenColorIO_1_1GpuShaderDesc"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" line="1742" column="1" bodyfile="/home/fawlty/temp_dev/OpenColorIO-2/include/OpenColorIO/OpenColorIO.h" bodystart="1741" bodyend="1883"/>
    <listofallmembers>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aa2563eedfe100386218081626923c594" prot="public" virt="pure-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>add3DTexture</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a286037957d6c9442740d7a5a30745205" prot="public" virt="pure-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addTexture</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a650f4c1a6b6e1877f8eea88d1c8172b1" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addToDeclareShaderCode</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1adc63f83e4d7d0683ae7a326637ddf38b" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addToFunctionFooterShaderCode</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aa51f90054aadcd1bc109352d13c885fe" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addToFunctionHeaderShaderCode</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aaef2f573b56f27eab566d27c5b12f9be" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addToFunctionShaderCode</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a1319475d3b456ed4a95e4771e6ea3b81" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addToHelperShaderCode</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aff5b6b69bfa024f466f011ba0d995f73" prot="public" virt="pure-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>addUniform</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a94f4ee14c054178964279da43b3e455b" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>begin</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aefcabad237571ec803f026d4b78129b9" prot="public" virt="pure-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>clone</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aca63ccc1ca4a57926de2b8c035ab0250" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>createShaderText</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aefff8d2d8bcde50bff056dfac8e9c686" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>end</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a5081dc6057d6ad7db8d9249943427a1d" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>finalize</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ab9a5b1ca90bafcee8edf5ddddc511165" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getCacheID</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ab4ac5053444b2f708479593802dd1d62" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getFunctionName</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a215d4db9f8bf2e5cc7a092c3f1a60063" prot="protected" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getImpl</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ae1cba21ec94e02bdba84f7f2e496fbd7" prot="protected" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getImpl</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ae83c259369557abb695647df308dd3ed" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getLanguage</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a293ab0e64326700341954185cb6f6a0f" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getNextResourceIndex</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a736046bc5633be4f33e1a13339741c30" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getPixelName</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aae14f5161e456dbbfd79e93252b3a2ba" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getResourcePrefix</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ab1a1ec84dcb7f9e5157d9a37effa98b4" prot="public" virt="pure-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getTextureMaxWidth</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a2e7cff7f3b9a22f8d1687a4ccce94d1f" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>getUniqueID</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a45aadfc88f2d565f91c36132eb934d4a" prot="protected" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>GpuShaderCreator</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aeb3d603c24285a2a6847d7e0fa2ccd94" prot="protected" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>GpuShaderCreator</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a0e52a68447afb66a945caa74f4377e80" prot="protected" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>m_impl</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a0f0030b407e66a6b8fc57ecc9477a95a" prot="protected" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>operator=</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1aeab38f9711debc759de0ae1cea252782" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>setFunctionName</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a75637e61337430e8d6c088e434beaa17" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>setLanguage</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a328bd2bd77ad241380435547277b149c" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>setPixelName</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a19150567cfccf6ba6fe3c5c696a525ff" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>setResourcePrefix</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a8a8238cba4094badb4814c8431999b74" prot="public" virt="pure-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>setTextureMaxWidth</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ac35f65f6ab2e51a0389c185b03410a74" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>setUniqueID</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ac0ccf40f657d3df178cc8ae244134219a1ebf3e139458c15f7a638260059e02af" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>TEXTURE_RED_CHANNEL</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ac0ccf40f657d3df178cc8ae244134219ac0e9920b3ef324bc8fcc9a0ab5ef5d76" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>TEXTURE_RGB_CHANNEL</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1ac0ccf40f657d3df178cc8ae244134219" prot="public" virt="non-virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>TextureType</name></member>
      <member refid="classOpenColorIO_1_1GpuShaderCreator_1a9efeac81b9a31ddceec71a5f834f83aa" prot="public" virt="virtual"><scope>OpenColorIO::GpuShaderCreator</scope><name>~GpuShaderCreator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
